<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="kr.or.profit.mapper.CommunityMapper">

	<!-- 자유게시판 글 추가 -->
	<insert id="insertBoard">
		<selectKey order="BEFORE" keyProperty="communitySeq"
			resultType="String">
			SELECT NVL(MAX(TO_NUMBER(COMMUNITY_SEQ)),0)+1 FROM
			COMMUNITY
		</selectKey>
		<![CDATA[
			INSERT INTO COMMUNITY
			(	COMMUNITY_SEQ,
				COMMON_SEQ,
				COMMUNITY_CATEGORY_SEQ,
				FILE_SEQ,
				COMMON_TITLE,
				COMMON_CONTENT,
				COMMON_HIT,
				COMMON_DEL_FLAG,
				IN_USER_ID,
				IN_DATE,
				UP_USER_ID,
				UP_DATE
			)
			VALUES (
				#{communitySeq},
				'5',
				#{communityCategorySeq, jdbcType=VARCHAR},
				#{fileSeq, jdbcType=VARCHAR},
				#{commonTitle, jdbcType=VARCHAR},
				#{commonContent, jdbcType=VARCHAR},
				'0',
				'N',
				#{inUserId, jdbcType=VARCHAR},
				sysdate,
				#{upUserId, jdbcType=VARCHAR},
				sysdate
			)
		]]>
	</insert>


	<!-- 자유게시판 글 추가 시 썸네일 사진 추가 -->
	<insert id="insertBoardFile">
		<selectKey order="BEFORE" keyProperty="fileSeq"
			resultType="String">
			SELECT NVL(MAX(TO_NUMBER(FILE_SEQ)),0)+1 FROM ATTACH_FILE
		</selectKey>
		<![CDATA[
			INSERT INTO ATTACH_FILE
			(	FILE_SEQ,
				FILE_DETAIL_SEQ,
				FILE_REAL_NAME,
				FILE_SAVE_NAME,
				FILE_PATH,
				IN_USER_ID,
				IN_DATE,
				UP_USER_ID,
				UP_DATE
			)
			VALUES 
			(
				#{fileSeq, jdbcType=VARCHAR},
				'1',
				#{fileRealName, jdbcType=VARCHAR},
				#{fileSaveName, jdbcType=VARCHAR},
				#{filePath, jdbcType=VARCHAR},
				#{inUserId, jdbcType=VARCHAR},
				sysdate,
				#{upUserId, jdbcType=VARCHAR},
				sysdate
			)
		]]>
	</insert>

	<!-- 자유게시판 목록 조회 -->
	<select id="selectBoardList" resultType="egovMap">	<!-- egovMap : key 에 대하여 Camel Case 변환하여 super.put -->

		SELECT
		A.COMMUNITY_SEQ,
		A.COMMUNITY_CATEGORY_SEQ,
		A.FILE_SEQ,
		CASE
		WHEN
		LENGTH(A.COMMON_TITLE) > 20 THEN SUBSTR(A.COMMON_TITLE, 0, 20) ||
		'...'
		ELSE A.COMMON_TITLE
		END AS COMMON_TITLE,
		A.COMMON_CONTENT,
		A.COMMON_HIT,
		A.IN_USER_ID,
		A.IN_DATE,
		B.FILE_PATH,
		NVL(C.BOARD_GOOD,0) AS
		BOARD_GOOD,
		NVL(F.BOARD_BOOK,0) AS BOARD_BOOK,
		NVL(D.BOARD_REPLY,0) AS
		BOARD_REPLY,
		E.COMMUNITY_CATEGORY_NAME
		FROM
		COMMUNITY A
		LEFT JOIN
		ATTACH_FILE B ON
		(A.FILE_SEQ = B.FILE_SEQ)
		LEFT JOIN
		(
		SELECT
		COMMUNITY_SEQ, COUNT(*) AS BOARD_GOOD
		FROM BOOKGOOD
		WHERE
		BOOKGOOD_FLAG='Y' AND BOOKGOOD_GUBUN='G'
		GROUP BY COMMUNITY_SEQ
		) C ON
		(A.COMMUNITY_SEQ = C.COMMUNITY_SEQ)
		LEFT JOIN
		(
		SELECT COMMUNITY_SEQ,
		COUNT(*) AS BOARD_REPLY
		FROM REPLY
		WHERE REPLY_DEL_FLAG='N'
		GROUP BY
		COMMUNITY_SEQ
		) D ON
		(A.COMMUNITY_SEQ = D.COMMUNITY_SEQ)
		LEFT JOIN
		COMMUNITY_CATEGORY E ON
		(A.COMMUNITY_CATEGORY_SEQ =
		E.COMMUNITY_CATEGORY_SEQ)
		LEFT JOIN
		(
		SELECT COMMUNITY_SEQ, COUNT(*) AS
		BOARD_BOOK
		FROM BOOKGOOD
		WHERE BOOKGOOD_FLAG='Y' AND BOOKGOOD_GUBUN='B'
		GROUP BY COMMUNITY_SEQ
		) F ON
		(A.COMMUNITY_SEQ = C.COMMUNITY_SEQ)
		WHERE
		A.COMMON_SEQ = 5 AND A.COMMON_DEL_FLAG = 'N'
		ORDER BY A.IN_DATE DESC
	</select>

	
	<!-- 자유게시판 인기글 목록 조회 -->
	<select id="selectBoardTopList" resultType="egovMap">
		<![CDATA[
		SELECT 
		COMMUNITY_SEQ, 
	    COMMUNITY_CATEGORY_SEQ, 
	    FILE_SEQ, 
	    COMMON_TITLE,
	    COMMON_CONTENT,
	    COMMON_HIT,
	    IN_USER_ID, 
	    TO_CHAR(IN_DATE,'YYYY-MM-DD') AS IN_DATE,
	    FILE_PATH,
	    BOARD_GOOD,
	    BOARD_BOOK,
	    BOARD_REPLY,
	    COMMUNITY_CATEGORY_NAME
		FROM
		(
		SELECT
		A.COMMUNITY_SEQ,
		A.COMMUNITY_CATEGORY_SEQ,
		A.FILE_SEQ,
		CASE
		WHEN LENGTH(A.COMMON_TITLE) > 30 THEN SUBSTR(A.COMMON_TITLE, 0, 30) ||'...'
		ELSE A.COMMON_TITLE
		END AS COMMON_TITLE,
		A.COMMON_CONTENT,
		A.COMMON_HIT,
		A.IN_USER_ID,
		A.IN_DATE,
		B.FILE_PATH,
		NVL(C.BOARD_GOOD,0) AS BOARD_GOOD,
		NVL(F.BOARD_BOOK,0) AS BOARD_BOOK,
		NVL(D.BOARD_REPLY,0) AS BOARD_REPLY,
		E.COMMUNITY_CATEGORY_NAME
		FROM
		COMMUNITY A
		LEFT JOIN ATTACH_FILE B ON
		(A.FILE_SEQ = B.FILE_SEQ)
		LEFT JOIN
		(
		SELECT COMMUNITY_SEQ, COUNT(*) AS BOARD_GOOD
		FROM BOOKGOOD
		WHERE BOOKGOOD_FLAG='Y' AND BOOKGOOD_GUBUN='G'
		GROUP BY COMMUNITY_SEQ
		) C ON
		(A.COMMUNITY_SEQ = C.COMMUNITY_SEQ)
		LEFT JOIN
		(
		SELECT COMMUNITY_SEQ, COUNT(*) AS BOARD_REPLY
		FROM REPLY
		WHERE
		REPLY_DEL_FLAG='N'
		GROUP BY COMMUNITY_SEQ
		) D ON
		(A.COMMUNITY_SEQ =
		D.COMMUNITY_SEQ)
		LEFT JOIN COMMUNITY_CATEGORY
		E ON
		(A.COMMUNITY_CATEGORY_SEQ = E.COMMUNITY_CATEGORY_SEQ)
		LEFT JOIN
		(
		SELECT COMMUNITY_SEQ, COUNT(*) AS BOARD_BOOK
		FROM BOOKGOOD
		WHERE BOOKGOOD_FLAG='Y' AND BOOKGOOD_GUBUN='B'
		GROUP BY COMMUNITY_SEQ
		) F ON
		(A.COMMUNITY_SEQ = C.COMMUNITY_SEQ)
		WHERE A.COMMON_SEQ = 5 AND A.COMMON_DEL_FLAG = 'N'
		ORDER BY TO_NUMBER(A.COMMON_HIT) DESC
		)
		WHERE ROWNUM<=6
		]]>
	</select>

	
	<resultMap id="test" type="HashMap" >
		<result property="commonContent" column="COMMON_CONTENT" jdbcType="CLOB" javaType="java.lang.String" />
		<result property="communityCategoryName" column="COMMUNITY_CATEGORY_NAME" />
		<result property="commonTitle" column="COMMON_TITLE" />
		<result property="commonHit" column="COMMON_HIT" />
		<result property="boardReply" column="BOARD_REPLY" />
		<result property="boardGood" column="BOARD_GOOD" />
		<result property="boardBook" column="BOARD_BOOK" />
		<result property="inDate" column="IN_DATE" />
		<result property="communitySeq" column="COMMUNITY_SEQ" />
		<result property="communityCategorySeq" column="COMMUNITY_CATEGORY_SEQ" />
	</resultMap>
	
	<!-- 자유게시판 상세글 조회 -->
	<select id="selectBoardDetail" resultMap="test">
		<![CDATA[
		SELECT A.COMMUNITY_SEQ, B.COMMUNITY_CATEGORY_NAME, A.COMMON_SEQ, NVL(C.BOARD_REPLY,0) AS BOARD_REPLY , NVL(D.BOARD_BOOK,0) AS BOARD_BOOK,NVL(E.BOARD_GOOD,0) AS BOARD_GOOD, 
        A.COMMUNITY_CATEGORY_SEQ, A.FILE_SEQ, A.COMMON_TITLE, A.COMMON_CONTENT, A.COMMON_HIT, A.COMMON_DEL_FLAG, 
        A.IN_USER_ID, to_char(A.IN_DATE,'yyyy-mm-dd') as in_date, A.UP_USER_ID, A.UP_DATE
		FROM COMMUNITY A
		LEFT JOIN
		COMMUNITY_CATEGORY B ON
		(A.COMMUNITY_CATEGORY_SEQ=B.COMMUNITY_CATEGORY_SEQ)
		LEFT JOIN
		(
		SELECT COMMUNITY_SEQ, COUNT(*) AS BOARD_REPLY
		FROM REPLY
		WHERE REPLY_DEL_FLAG='N'
		GROUP BY COMMUNITY_SEQ
		) C ON
		(A.COMMUNITY_SEQ = C.COMMUNITY_SEQ)
		LEFT JOIN
		(
		SELECT COMMUNITY_SEQ, COUNT(*) AS BOARD_BOOK
				FROM BOOKGOOD
				WHERE BOOKGOOD_FLAG='Y' AND BOOKGOOD_GUBUN='B'
		        GROUP BY COMMUNITY_SEQ
		) D ON
		(A.COMMUNITY_SEQ = D.COMMUNITY_SEQ)
		LEFT JOIN
		(
		SELECT COMMUNITY_SEQ, COUNT(*) AS BOARD_GOOD
				FROM BOOKGOOD
				WHERE BOOKGOOD_FLAG='Y' AND BOOKGOOD_GUBUN='G'
		        GROUP BY COMMUNITY_SEQ
		) E ON
		(A.COMMUNITY_SEQ = E.COMMUNITY_SEQ)
		WHERE A.COMMUNITY_SEQ = #{COMMUNITY_SEQ}
		]]>
	</select>

	<!-- 자유게시판 상세 댓글 나의 프로필 사진 조회 -->
	<select id="selectMyProfile" resultType="String">
		SELECT B.FILE_PATH as
		file_path
		FROM MEMBER A
		LEFT JOIN
		ATTACH_FILE B ON
		(A.FILE_SEQ=B.FILE_SEQ)
		WHERE MEMBER_ID=#{memberId}
	</select>


	<!-- 자유게시판 상세 댓글 추가 -->
	<insert id="insertBoardReply">
		<selectKey order="BEFORE" keyProperty="replySeq"
			resultType="String">
			SELECT NVL(MAX(TO_NUMBER(REPLY_SEQ)),0)+1 FROM REPLY
		</selectKey>
		<![CDATA[
		INSERT 
			INTO 
		reply
		(
		reply_seq, 
		community_seq, 
		reply_content, 
		reply_del_flag, 
		reply_depth, 
		in_user_id,
		in_date, 
		up_user_id, 
		up_date
		)
		VALUES 
		(
		#{replySeq},
		#{communitySeq},
		#{replyContent},
		'N',
		'1',
		#{inUserId},
		sysdate, 
		#{upUserId}, 
		sysdate
		)
		]]>
	</insert>
	
	<!-- 자유게시판 댓글 목록 조회-->
	<select id="selectReplyList" resultType="egovMap">
		SELECT REPLY_SEQ, REPLY_CONTENT, COMMUNITY_SEQ, REPLY_DEL_FLAG, REPLY_PARENT_SEQ, REPLY_DEPTH, LEAD(REPLY_DEPTH) OVER(ORDER BY RN) AS REPLY_NEXT_DEPTH ,IN_USER_ID, IN_DATE, MEMBER_NICKNAME
		FROM
		(
		SELECT ROWNUM AS RN, A.COMMUNITY_SEQ, A.REPLY_SEQ, A.REPLY_CONTENT, A.REPLY_DEL_FLAG, A.REPLY_PARENT_SEQ, A.REPLY_DEPTH,A.IN_USER_ID, A.IN_DATE, B.MEMBER_NICKNAME
		FROM
		(
		SELECT *
		FROM REPLY
		WHERE REPLY_DEL_FLAG='N'
		START WITH REPLY_PARENT_SEQ IS NULL
		CONNECT BY PRIOR REPLY_SEQ = REPLY_PARENT_SEQ
		ORDER SIBLINGS BY IN_DATE DESC, REPLY_SEQ
		) A
		LEFT JOIN 
		MEMBER B ON
		(A.IN_USER_ID=B.MEMBER_ID)
		)
	</select>
	

</mapper>
