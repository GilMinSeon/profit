<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="kr.or.profit.mapper.MemberMapper">

   <resultMap id="memberVO" type="kr.or.profit.vo.MemberVO">
        <result property="memberId" column="member_id"/>
        <result property="memberPwd" column="member_pwd"/>
        <result property="memberName" column="member_name"/>
        <result property="memberNickname" column="member_nickname"/>
        <result property="memberMobile" column="member_mobile"/>
        <result property="memberGender" column="member_gender"/>
        <result property="memberHeight" column="member_height"/>
        <result property="memberWeight" column="member_weight"/>
        <result property="memberEmail" column="member_email"/>
        <result property="memberGubun" column="member_gubun"/>
        <result property="memberRoute" column="member_route"/>
        <result property="inUserId" column="in_user_id"/>
        <result property="inDate" column="in_Date"/>
        <result property="upUserId" column="up_user_id"/>
        <result property="upDate" column="up_date"/>
    </resultMap>

<!--    아이디 찾기 개수 -->
	<select id="findIdCnt" parameterType="hashMap" resultType="int">
		SELECT
		    COUNT(*) CNT
		FROM
		    MEMBER
		WHERE
		    MEMBER_NAME = #{memberName}
		AND
		    MEMBER_EMAIL = #{memberEmail}

	</select>

	<!--    아이디 찾기 -->
	<select id="findId" parameterType="hashMap" resultType="memberVO">
		SELECT
		    MEMBER_ID,
		    MEMBER_PWD,
		    MEMBER_NAME,
		    MEMBER_NICKNAME,
		    MEMBER_MOBILE,
		    MEMBER_GENDER,
		    MEMBER_HEIGHT,
		    MEMBER_WEIGHT,
		    MEMBER_EMAIL,
		    MEMBER_GUBUN,
		    MEMBER_ROUTE,
		    IN_USER_ID,
		    IN_DATE,
		    UP_USER_ID,
		    UP_DATE
		FROM
		    MEMBER
		WHERE
		    MEMBER_NAME = #{memberName}
		AND
		    MEMBER_EMAIL = #{memberEmail}

	</select>


    <insert id="insertMember" parameterType="MemberVO">
        <![CDATA[
        insert into MEMBER(
        	MEMBER_ID, MEMBER_PWD, MEMBER_NAME, MEMBER_NICKNAME, MEMBER_MOBILE,
        	MEMBER_GENDER, MEMBER_HEIGHT, MEMBER_WEIGHT, MEMBER_EMAIL, MEMBER_GUBUN, MEMBER_ROUTE, MEMBER_PROFILE_PATH,
        	IN_USER_ID, IN_DATE, UP_USER_ID, UP_DATE
        ) values (
        	#{memberId}, #{memberPwd}, #{memberName}, #{memberNickname}, #{memberMobile},
        	#{memberGender}, #{memberHeight}, #{memberWeight}, #{memberEmail}, 'U', 'P', 123,
        	#{memberId}, to_char(sysdate, 'YYYYMMDD.HH24MISS'), #{memberId}, to_char(sysdate, 'YYYYMMDD.HH24MISS')
        )
        ]]>
    </insert>

    <!-- 아이디 중복 검사 -->
    <select id="selectMemberIdCheck" parameterType="String" resultType="int">
        select count(*) from MEMBER where MEMBER_ID = #{memberId}
    </select>

    <!-- 닉네임 중복 검사 -->
    <select id="selectMemberNicknameCheck" parameterType="String" resultType="int">
        select count(*) from MEMBER where MEMBER_NICKNAME = #{memberNickname}
    </select>

    <!-- 닉네임 중복 검사 -->
    <select id="selectMemberEmailCheck" parameterType="String" resultType="int">
        select count(*) from MEMBER where MEMBER_EMAIL = #{memberEmail}
    </select>


    <!-- 로그인처리 -->
    <select id="selectMemberCount" parameterType="MemberVO" resultType="MemberVO">
        select MEMBER_ID as memberId, MEMBER_NICKNAME as memberNickname, MEMBER_GUBUN as memberGubun
        from MEMBER
        where MEMBER_ID = #{memberId} and MEMBER_PWD = #{memberPwd}
    </select>


</mapper>