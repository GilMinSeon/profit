<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="kr.or.profit.mapper.MypageMapper">

    <!-- 프로세스 정보 가져오기 -->
    <select id="selectProcessInfo" parameterType="String" resultType="ProcessVO">
        select a.member_name, a.member_gender, a.member_mobile,b.file_seq,b.process_status,
		        b.trainer_gym, b.trainer_award, b.trainer_career, b.in_date
		from member a
		inner join process b
		on a.member_id = b.member_id
		where a.member_id = #{memberId}
    </select>
    
    
    <!-- 첨부파일 가져오기-->
    <select id="selectFileInfo" parameterType="String" resultType="egovMap">
    select file_real_name, file_path 
	from attach_file
	where file_seq = #{fileSeq}
	</select>
    
    
    <!-- 페이지 못들어가게 검사 -->
    <select id="checkApplyPage" parameterType="String" resultType="int">
        select count(*)
		from process
		where process_status in ('A', 'B', 'C', 'E')
		and member_id = #{memberId}
        
    </select>
    
    

	<!-- 회원 기본정보 가져오기 -->
	<select id="selectMemberInfo" parameterType="String"
		resultType="egovMap">
		select
		member_name,
		member_gender,
		member_mobile
		from
		member
		where
		member_id=#{memberId}
	</select>


	<!-- 프로세스테이블에 정보 추가 -->
	<insert id="insertProcess" parameterType="ProcessVO">

		<selectKey resultType="string" keyProperty="fileSeq"
			order="BEFORE">
			select
			NVL(max(to_number(file_seq)),0)
			from attach_file
		</selectKey>
              
        <![CDATA[
        insert 
           into 
        process
           (
              	process_seq,
	            member_id,
	            file_seq,
	            trainer_award,
	            trainer_career,
	            trainer_gym,
	            process_status,
	            process_finish_date,
	            admin_memo,
	            in_user_id,
	            in_date,
	            up_user_id,
	            up_date
           )
         values(
            (
            	select 
                  NVL(max(to_number(process_seq)),0) + 1 
               from process
            ), 
            #{memberId}, 
            #{fileSeq},
            #{trainerAward}, 
            #{trainerCareer}, 
            #{trainerGym},
            'A',
            sysdate+14,
              null, 
              #{inUserId}, 
              sysdate, 
              #{upUserId}, 
              sysdate
              )
        ]]>

	</insert>

	<!-- 파일 테이블에 데이터 추가 -->


	<insert id="insertProcessFile" parameterType="java.util.Map">
		<foreach collection="list" item="item" index="index"
			open="INSERT ALL" close="SELECT * FROM DUAL" separator=" ">

			into
			attach_file
			(
			file_seq,
			file_detail_seq,
			file_real_name,
			file_save_name,
			file_path,
			in_user_id,
			in_date,
			up_user_id,
			up_date
			)
			values

			(
			(
			select
			NVL(max(to_number(file_seq)),0) + 1
			from
			attach_file),
			#{item.fileDetailSeq},
			#{item.fileRealName},
			#{item.fileSaveName},
			#{item.filePath},
			#{item.inUserId},
			sysdate,
			#{item.upUserId, jdbcType=VARCHAR},
			sysdate
			)


		</foreach>
	</insert>



	<!-- 회원모든정보 select -->
	<select id="selectAllMemberInfo" parameterType="String" resultType="MemberVO">
		select 
			m.member_id, 
			a.file_path, 
			m.MEMBER_PWD, 
			m.MEMBER_NAME,
			m.MEMBER_NICKNAME, 
			nvl(m.MEMBER_MOBILE,0) as MEMBER_MOBILE,
			nvl(m.MEMBER_GENDER,0) as MEMBER_GENDER,
			nvl(m.MEMBER_HEIGHT,0) as MEMBER_HEIGHT, 
			nvl(m.MEMBER_WEIGHT,0) as MEMBER_WEIGHT, 
			m.MEMBER_EMAIL,
			m.MEMBER_ROUTE
		from
			member m
		inner join attach_file a
		using (file_seq)
		where member_id = #{memberId}
	</select>

	
	
	<!-- 민선 내정보수정 -->
	<update id="updateMemberInfo" parameterType="MemberVO">
        update member
        set  
        member_name = #{memberName},
        member_nickname = #{memberNickname},
        member_mobile = #{memberMobile},
        member_gender = #{memberGender},
        member_weight = #{memberWeight},
        member_height = #{memberHeight},
        file_seq = (select NVL(max(to_number(file_seq)),0) from attach_file)
        where
        member_id = #{memberId}

	</update>
	
	
	<update id="updateOnlyInfo" parameterType="MemberVO">
		update member
        set  
        member_name = #{memberName},
        member_nickname = #{memberNickname},
        member_mobile = #{memberMobile},
        member_gender = #{memberGender},
        member_weight = #{memberWeight},
        member_height = #{memberHeight}
        where
        member_id = #{memberId}
	    
	</update>
	
	
	


</mapper>